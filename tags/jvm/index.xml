<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>JVM - Tag - Coding Man</title>
        <link>http://itcodingman.github.io/tags/jvm/</link>
        <description>JVM - Tag - Coding Man</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 28 Apr 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://itcodingman.github.io/tags/jvm/" rel="self" type="application/rss+xml" /><item>
    <title></title>
    <link>http://itcodingman.github.io/java_memory_layout/</link>
    <pubDate>Thu, 28 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/java_memory_layout/</guid>
    <description><![CDATA[1. 概述 在本教程中，我们将了解 JVM 如何在堆中布置对象和数组。 首先，我们将从一些理论开始。然后，我们将探索不同情况下的不同对象和数组内存布局。 通常]]></description>
</item>
<item>
    <title>为 JVM 应用程序添加关闭挂钩</title>
    <link>http://itcodingman.github.io/adding_shutdown_hooks_for_jvm_applications/</link>
    <pubDate>Tue, 03 Apr 2018 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/adding_shutdown_hooks_for_jvm_applications/</guid>
    <description><![CDATA[概述 启动服务通常很容易。但是，有时我们需要制定一个优雅地关闭一个的计划。 在本教程中，我们将了解 JVM 应用程序可以终止的不同方式。然后，我们将使用]]></description>
</item>
</channel>
</rss>
