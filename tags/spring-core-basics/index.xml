<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Spring Core Basics - Tag - Coding Man</title>
        <link>http://itcodingman.github.io/tags/spring-core-basics/</link>
        <description>Spring Core Basics - Tag - Coding Man</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 17 Feb 2016 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://itcodingman.github.io/tags/spring-core-basics/" rel="self" type="application/rss+xml" /><item>
    <title>使用 Spring 的 JPA 指南</title>
    <link>http://itcodingman.github.io/the_persistence_layer_with_spring_and_jpa/</link>
    <pubDate>Wed, 17 Feb 2016 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/the_persistence_layer_with_spring_and_jpa/</guid>
    <description><![CDATA[1. 概述 本教程展示了如何使用 Hibernate 作为持久性提供者来使用JPA 设置 Spring 。 有关使用基于 Java 的配置和项目的基本 Maven pom 设置 Spring 上下文的分步介绍，请参阅本文。 我们]]></description>
</item>
<item>
    <title>Spring 和 Maven</title>
    <link>http://itcodingman.github.io/spring_with_maven/</link>
    <pubDate>Mon, 15 Feb 2016 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/spring_with_maven/</guid>
    <description><![CDATA[1. 概述 本教程说明了如何通过 Maven 设置Spring 依赖项。最新的 Spring 版本可以在 Maven Central上找到。 2. Maven 的基本 Spring 依赖 Spring 被设计成高度模块化的——使用]]></description>
</item>
<item>
    <title>为什么选择 Spring 作为您的 Java 框架？</title>
    <link>http://itcodingman.github.io/spring_why_to_choose/</link>
    <pubDate>Sun, 14 Feb 2016 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/spring_why_to_choose/</guid>
    <description><![CDATA[1. 概述 在本文中，我们将介绍Spring作为最流行的 Java 框架之一的主要价值主张。 更重要的是，我们将尝试了解 Spring 成为我们选择框架的原因。Spring]]></description>
</item>
<item>
    <title>使用带有默认值的 Spring @Value</title>
    <link>http://itcodingman.github.io/spring_value_defaults/</link>
    <pubDate>Sat, 13 Feb 2016 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/spring_value_defaults/</guid>
    <description><![CDATA[1. 概述 Spring 的*@Value*注解提供了一种将属性值注入组件的便捷方式。为可能不存在属性的情况提供合理的默认值也非常有用。 这就是我们将在本教程中]]></description>
</item>
<item>
    <title>Spring 的 @RequestBody 和 @ResponseBody 注解</title>
    <link>http://itcodingman.github.io/spring_request_response_body/</link>
    <pubDate>Wed, 10 Feb 2016 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/spring_request_response_body/</guid>
    <description><![CDATA[1. 简介 在这个快速教程中，我们简要概述了 Spring @RequestBody和*@ResponseBody*注释。 2. @RequestBody 简单地说，@RequestBody]]></description>
</item>
<item>
    <title>Spring @RequestParam 注解</title>
    <link>http://itcodingman.github.io/spring_request_param/</link>
    <pubDate>Tue, 09 Feb 2016 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/spring_request_param/</guid>
    <description><![CDATA[1. 概述 在这个快速教程中，我们将探索 Spring 的*@RequestParam*注解及其属性。 简单来说，我们可以使用@RequestParam*从请求中]]></description>
</item>
<item>
    <title>Spring @Qualifier 注解</title>
    <link>http://itcodingman.github.io/spring_qualifier_annotation/</link>
    <pubDate>Sun, 07 Feb 2016 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/spring_qualifier_annotation/</guid>
    <description><![CDATA[1.概述 在本教程中，我们将探讨**@Qualifier注解**可以帮助我们解决哪些问题，以及如何使用它。 2. Autowire 需要消歧义 @Autowired注]]></description>
</item>
<item>
    <title>Spring JDBC</title>
    <link>http://itcodingman.github.io/spring_jdbc_jdbctemplate/</link>
    <pubDate>Fri, 29 Jan 2016 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/spring_jdbc_jdbctemplate/</guid>
    <description><![CDATA[1. 概述 在本教程中，我们将介绍 Spring JDBC 模块的实际用例。 Spring JDBC 中的所有类都分为四个独立的包： core — JDBC 的核心功能。该包下的一些重要类包括JdbcTempl]]></description>
</item>
<item>
    <title>JPA 和 Spring 的 DAO</title>
    <link>http://itcodingman.github.io/spring_dao_jpa/</link>
    <pubDate>Sun, 24 Jan 2016 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/spring_dao_jpa/</guid>
    <description><![CDATA[1. 概述 本文将展示如何使用 Spring 和 JPA 实现 DAO。有关核心 JPA 配置，请参阅有关 JPA with Spring 的文章。 2. 不再有 Spring 模板 从 Spring 3.1 开始，已弃用JpaTemplate和相]]></description>
</item>
<item>
    <title>Spring @Controller 和 @RestController 注解</title>
    <link>http://itcodingman.github.io/spring_controller_vs_restcontroller/</link>
    <pubDate>Fri, 22 Jan 2016 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/spring_controller_vs_restcontroller/</guid>
    <description><![CDATA[1. 概述 在这个简短的教程中，我们将讨论Spring MVC 中*@Controller和@RestController*注解之间的区别。 我们可以将第一]]></description>
</item>
</channel>
</rss>
