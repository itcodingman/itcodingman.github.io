<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>DevOps - Category - Coding Man</title>
        <link>http://itcodingman.github.io/categories/devops/</link>
        <description>DevOps - Category - Coding Man</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 16 May 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://itcodingman.github.io/categories/devops/" rel="self" type="application/rss+xml" /><item>
    <title></title>
    <link>http://itcodingman.github.io/java_metrics/</link>
    <pubDate>Mon, 16 May 2022 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/java_metrics/</guid>
    <description><![CDATA[1. 概述 在这个快速教程中，我们将讨论如何在 Java 中监控关键指标。我们将专注于磁盘空间、内存使用和线程数据——仅使用核心 Java API。 在我们的第一个示例]]></description>
</item>
<item>
    <title></title>
    <link>http://itcodingman.github.io/java_management_extensions/</link>
    <pubDate>Fri, 01 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/java_management_extensions/</guid>
    <description><![CDATA[1. 简介 Java 管理扩展 (JMX) 框架是在 Java 1.5 中引入的，并且从一开始就在 Java 开发人员社区中得到广泛接受。 它为本地或远程管理 Java 应用程序提供了一个易于配置、可扩展]]></description>
</item>
<item>
    <title></title>
    <link>http://itcodingman.github.io/java_mac_address/</link>
    <pubDate>Wed, 30 Mar 2022 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/java_mac_address/</guid>
    <description><![CDATA[1. 简介 在本教程中，我们将使用 Java 获取本地机器的 MAC 地址。 MAC 地址是物理网络接口卡的唯一标识符。 我们将仅介绍 MAC 地址，但有关网络接口的更一般概述，请参]]></description>
</item>
<item>
    <title>Apache Spark 简介</title>
    <link>http://itcodingman.github.io/apache_spark/</link>
    <pubDate>Wed, 06 Jun 2018 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/apache_spark/</guid>
    <description><![CDATA[1. 简介 Apache Spark是一个开源集群计算框架。它为 Scala、Java、Python 和 R 提供了优雅的开发 API，允许开发人员跨不同的数据源执行各]]></description>
</item>
<item>
    <title>使用 Apache Kafka 进行数据建模</title>
    <link>http://itcodingman.github.io/apache_kafka_data_modeling/</link>
    <pubDate>Sun, 20 May 2018 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/apache_kafka_data_modeling/</guid>
    <description><![CDATA[1. 概述 在本教程中，我们将使用 Apache Kafka 进入事件驱动架构的数据建模领域。 2. 设置 Kafka 集群由多个注册到 Zookeeper 集群的 Kafka 代理组成。为了简单起见，我们将使用由 Confluent 发布]]></description>
</item>
<item>
    <title>Apache Curator 简介</title>
    <link>http://itcodingman.github.io/apache_curator/</link>
    <pubDate>Mon, 07 May 2018 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/apache_curator/</guid>
    <description><![CDATA[1. 简介 Apache Curator是 Apache Zookeeper 的 Java 客户端，Apache Zookeeper是分布式应用程序的流行协调服务。 在本教程中，我们将介绍 Curator 提供的一些最相]]></description>
</item>
<item>
    <title>Ant vs Maven vs Gradle</title>
    <link>http://itcodingman.github.io/ant_maven_gradle/</link>
    <pubDate>Sat, 14 Apr 2018 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/ant_maven_gradle/</guid>
    <description><![CDATA[1. 简介 在本文中，我们将探讨主导 JVM 生态系统的三个 Java 构建自动化工具——Ant、Maven 和 Gradle。 我们将介绍它们中的每一个，并探索 Java 构建自]]></description>
</item>
</channel>
</rss>
