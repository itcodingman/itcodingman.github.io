<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Data - Category - Coding Man</title>
        <link>http://itcodingman.github.io/categories/data/</link>
        <description>Data - Category - Coding Man</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 28 Jun 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://itcodingman.github.io/categories/data/" rel="self" type="application/rss+xml" /><item>
    <title>Netflix 观众指南</title>
    <link>http://itcodingman.github.io/java_netflix_spectator/</link>
    <pubDate>Tue, 28 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/java_netflix_spectator/</guid>
    <description><![CDATA[1. 概述 **Spectator是一个用于检测代码和为维度时间序列后端系统收集数据的库。**Spectator 起源于 Netflix，用于各种指标]]></description>
</item>
<item>
    <title>Netflix 螳螂简介</title>
    <link>http://itcodingman.github.io/java_netflix_mantis/</link>
    <pubDate>Mon, 27 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/java_netflix_mantis/</guid>
    <description><![CDATA[1. 概述 在本文中，我们将了解 Netflix 开发的 Mantis 平台。 我们将通过创建、运行和调查流处理作业来探索主要的 Mantis 概念。 2. 什么是Mantis？ Mantis 是一个用于构建流处]]></description>
</item>
<item>
    <title>使用 Apache Tika 进行内容分析</title>
    <link>http://itcodingman.github.io/apache_tika/</link>
    <pubDate>Sun, 10 Jun 2018 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/apache_tika/</guid>
    <description><![CDATA[1. 概述 Apache Tika是一个工具包，用于从各种类型的文档中提取内容和元数据，例如 Word、Excel 和 PDF，甚至是 JPEG 和 MP4 等多媒体文件。 所有基于文]]></description>
</item>
<item>
    <title>使用 Apache Thrift</title>
    <link>http://itcodingman.github.io/apache_thrift/</link>
    <pubDate>Sat, 09 Jun 2018 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/apache_thrift/</guid>
    <description><![CDATA[1. 概述 在本文中，我们将了解如何借助名为Apache Thrift的 RPC 框架开发跨平台的客户端-服务器应用程序。 我们将涵盖： 使用 IDL 定义数据类型和服]]></description>
</item>
<item>
    <title>Apache SolrJ 在 Java 中使用 Solr 指南</title>
    <link>http://itcodingman.github.io/apache_solrj/</link>
    <pubDate>Tue, 05 Jun 2018 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/apache_solrj/</guid>
    <description><![CDATA[1. 概述 Apache Solr是一个建立在 Lucene 之上的开源搜索平台。Apache SolrJ 是一个基于 Java 的 Solr 客户端，它为搜索的主要功能（如索引、查询和删除文档）提供接口]]></description>
</item>
<item>
    <title>带有 Spring Boot 的 Apache RocketMQ</title>
    <link>http://itcodingman.github.io/apache_rocketmq_spring_boot/</link>
    <pubDate>Sat, 02 Jun 2018 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/apache_rocketmq_spring_boot/</guid>
    <description><![CDATA[1. 简介 在本教程中，我们将使用 Spring Boot 和开源分布式消息传递和流数据平台 Apache RocketMQ 创建消息生产者和消费者。 2. 依赖 对于 Maven 项目，我们需要添加RocketMQ Spring]]></description>
</item>
<item>
    <title>使用 Apache POI 的 Excel 单元格中的多行文本</title>
    <link>http://itcodingman.github.io/apache_poi_write_multiline_text/</link>
    <pubDate>Thu, 31 May 2018 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/apache_poi_write_multiline_text/</guid>
    <description><![CDATA[1. 简介 我们可以使用 Apache POI 在 Microsoft Excel 电子表格中以编程方式创建多行文本。但是，它不会显示为多行。这是因为使用代码向单元格添加文本不会自动调整单元格高度]]></description>
</item>
<item>
    <title>使用 Apache POI 读取 Excel 单元格值而不是公式</title>
    <link>http://itcodingman.github.io/apache_poi_read_cell_value_formula/</link>
    <pubDate>Tue, 29 May 2018 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/apache_poi_read_cell_value_formula/</guid>
    <description><![CDATA[1. 简介 在 Java 中读取 Excel 文件时，我们通常希望读取单元格的值以执行一些计算或生成报告。但是，我们可能会遇到一个或多个包含公式而不是原始数据值的单元格]]></description>
</item>
<item>
    <title>使用 POI 的数字格式</title>
    <link>http://itcodingman.github.io/apache_poi_numeric_format/</link>
    <pubDate>Mon, 28 May 2018 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/apache_poi_numeric_format/</guid>
    <description><![CDATA[1. 概述 在本快速教程中，我们将演示如何使用 Apache POI 在 Excel 中格式化数字单元格。 2. Apache POI Apache POI是一个开源的纯 Java 项目。它提供了用于读取和写入 Microsoft Office 格式文件的]]></description>
</item>
<item>
    <title>使用 Apache POI 更改单元格字体样式</title>
    <link>http://itcodingman.github.io/apache_poi_change_cell_font/</link>
    <pubDate>Sat, 26 May 2018 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/apache_poi_change_cell_font/</guid>
    <description><![CDATA[1. 简介 Apache POI是一个开源库，供软件开发人员创建和操作 Microsoft Office 文档。除其他功能外，它还允许开发人员以编程方式更改文档格式。 在本文中，我们将讨论在使]]></description>
</item>
</channel>
</rss>
