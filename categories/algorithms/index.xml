<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Algorithms - Category - Coding Man</title>
        <link>http://itcodingman.github.io/categories/algorithms/</link>
        <description>Algorithms - Category - Coding Man</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 13 Jun 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://itcodingman.github.io/categories/algorithms/" rel="self" type="application/rss+xml" /><item>
    <title></title>
    <link>http://itcodingman.github.io/java_multi_swarm_algorithm/</link>
    <pubDate>Mon, 13 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/java_multi_swarm_algorithm/</guid>
    <description><![CDATA[1. 简介 在本文中，我们将了解多群优化算法。与同一类的其他算法一样，其目的是通过最大化或最小化特定函数（称为适应度函数）来找到问题的最佳解决方案]]></description>
</item>
<item>
    <title></title>
    <link>http://itcodingman.github.io/java_monte_carlo_tree_search/</link>
    <pubDate>Wed, 08 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/java_monte_carlo_tree_search/</guid>
    <description><![CDATA[1. 概述 在本文中，我们将探索蒙特卡洛树搜索 (MCTS) 算法及其应用。 我们将通过在 Java 中实现井字游戏来详细了解它的各个阶段。我们将设计一个通用的解决方案，它]]></description>
</item>
<item>
    <title></title>
    <link>http://itcodingman.github.io/java_minimax_algorithm/</link>
    <pubDate>Sun, 22 May 2022 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/java_minimax_algorithm/</guid>
    <description><![CDATA[1. 概述 在本文中，我们将讨论Minimax 算法及其在 AI 中的应用。由于它是一种博弈论算法，我们将使用它来实现一个简单的游戏。 我们还将讨论使用该算]]></description>
</item>
<item>
    <title></title>
    <link>http://itcodingman.github.io/java_merge_sorted_sequences/</link>
    <pubDate>Wed, 04 May 2022 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/java_merge_sorted_sequences/</guid>
    <description><![CDATA[1. 概述 在这个简短的教程中，我们将看到如何使用堆有效地合并排序数组。 2. 算法 由于我们的问题陈述是使用堆来合并数组，因此我们将使用最小堆来解决我们]]></description>
</item>
<item>
    <title></title>
    <link>http://itcodingman.github.io/java_merge_sort/</link>
    <pubDate>Mon, 02 May 2022 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/java_merge_sort/</guid>
    <description><![CDATA[1. 简介 在本教程中，我们将了解合并排序算法及其在 Java 中的实现。 归并排序是最有效的排序技术之一，它基于“分而治之”范式。 2. 算法 **合并排序是一种“]]></description>
</item>
<item>
    <title></title>
    <link>http://itcodingman.github.io/java_maximum_subarray/</link>
    <pubDate>Sat, 23 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/java_maximum_subarray/</guid>
    <description><![CDATA[1. 概述 最大子数组问题是在任何给定数组中找到具有最大和的一系列连续元素的任务。 例如，在下面的数组中，突出显示的子数组具有最大 sum(6)： 在本]]></description>
</item>
<item>
    <title></title>
    <link>http://itcodingman.github.io/java_matrix_multiplication/</link>
    <pubDate>Fri, 22 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/java_matrix_multiplication/</guid>
    <description><![CDATA[1. 概述 在本教程中，我们将了解如何在 Java 中将两个矩阵相乘。 由于矩阵概念在语言中不存在，我们将自己实现它，我们还将与一些库一起工作，看看它们如何处]]></description>
</item>
<item>
    <title></title>
    <link>http://itcodingman.github.io/java_math_sin_degrees/</link>
    <pubDate>Thu, 21 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/java_math_sin_degrees/</guid>
    <description><![CDATA[1. 简介 在这个简短的教程中，我们将了解如何使用 Java 的 *Math.sin()*函数计算正弦值，以及如何在度数和弧度之间转换角度值。 2. 弧度与度数 默认]]></description>
</item>
<item>
    <title>Apache OpenNLP 简介</title>
    <link>http://itcodingman.github.io/apache_open_nlp/</link>
    <pubDate>Wed, 23 May 2018 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/apache_open_nlp/</guid>
    <description><![CDATA[1. 概述 Apache OpenNLP 是一个开源的自然语言处理 Java 库。 它具有用于命名实体识别、句子检测、POS 标记和标记化等用例的 API。 在本教程中，我们将了解如何将此 API]]></description>
</item>
<item>
    <title>使用 Apache Kafka 进行数据建模</title>
    <link>http://itcodingman.github.io/apache_kafka_data_modeling/</link>
    <pubDate>Sun, 20 May 2018 00:00:00 &#43;0000</pubDate>
    <author>codingman</author>
    <guid>http://itcodingman.github.io/apache_kafka_data_modeling/</guid>
    <description><![CDATA[1. 概述 在本教程中，我们将使用 Apache Kafka 进入事件驱动架构的数据建模领域。 2. 设置 Kafka 集群由多个注册到 Zookeeper 集群的 Kafka 代理组成。为了简单起见，我们将使用由 Confluent 发布]]></description>
</item>
</channel>
</rss>
